- name: Remove old docker packages
  apt:
    name={{ item }}
    state=absent
    update_cache=yes
  loop: [ 'docker', 'docker-engine', 'docker.io', 'containerd', 'runc', 'docker-compose']
  register: apt_action
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Install required system packages
  apt:
    name={{ item }}
    state=latest
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']
  register: apt_action
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Update apt and install Docker
  apt:
    name={{ item }}
    state=latest
    update_cache=yes
  loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io']
  register: apt_action
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Start and enable docker service, if not started or enabled
  service:
    name: docker
    state: started
    enabled: yes
  register: service_action
  until: service_action is success or ('Unable to start service docker' not in service_action.msg)

- name: Install docker-compose-plugin
  apt:
    name=docker-compose-plugin
    state=latest
    update_cache=yes
  register: apt_action
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
  when: (compose is defined and compose == true)
